---
import BaseLayout from './BaseLayout.astro';
import Prose from '../components/Prose.astro';

export interface Props {
  title: string;
  description?: string;
  date?: Date;
  tags?: string[];
  author?: string;
}

const {
  title,
  description,
  date,
  tags = [],
  author = 'Aaron Rumery'
} = Astro.props;

const formattedDate = date ? new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
  timeZone: 'UTC'
}).format(date) : '';
---

<BaseLayout title={title} description={description} showSectionNav={false}>
  <!-- Blog Content Container -->
  <div class="w-full max-w-none sm:max-w-5xl mx-auto px-3 sm:px-6 md:px-8 lg:px-12 pt-4 sm:pt-8 md:pt-12 pb-8 sm:pb-16" style="overflow: visible; height: auto; max-height: none; box-sizing: border-box; min-width: 0; overflow-wrap: break-word; word-wrap: break-word;">
        <!-- Back to Blog Link -->
        <nav class="mb-6 sm:mb-8">
          <a
            href="/blog"
            class="inline-flex items-center text-secondary hover:text-tertiary transition-colors duration-300 text-sm font-mono"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
            </svg>
            &#47;&#47; Back to Blog
          </a>
        </nav>

        <!-- Article Header -->
        <header class="mb-8 sm:mb-10 md:mb-12">
          <h1 class="text-xl sm:text-3xl md:text-4xl lg:text-5xl font-bold text-white mb-3 sm:mb-4 leading-tight break-words hyphens-auto">
            {title}
          </h1>

          {description && (
            <p class="text-sm sm:text-lg text-zinc-300 mb-4 sm:mb-6 leading-relaxed break-words hyphens-auto">
              {description}
            </p>
          )}

          <!-- Article Meta -->
          <div class="flex flex-wrap items-center gap-3 sm:gap-4 text-sm text-zinc-400 border-b border-zinc-700 pb-4 sm:pb-6">
            {date && (
              <div class="flex items-center">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                </svg>
                <time datetime={date.toISOString()}>{formattedDate}</time>
              </div>
            )}

            <div class="flex items-center">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              <span>{author}</span>
            </div>

            {tags.length > 0 && (
              <div class="flex items-center flex-wrap gap-2">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.99 1.99 0 013 12V7a4 4 0 014-4z"></path>
                </svg>
                {tags.map((tag: string) => (
                  <span class="px-2 py-1 bg-primary_light text-tertiary text-xs rounded font-mono">
                    {tag}
                  </span>
                ))}
              </div>
            )}
          </div>
        </header>

        <!-- Article Content -->
        <article class="w-full min-w-0">
          <Prose>
            <slot />
          </Prose>
        </article>
  </div>
</BaseLayout>


