---
export interface Props {
}
---

<nav id="header" class="w-full fixed top-0 left-0 z-[9998] bg-primary shadow-xl">
  <div class="w-full max-w-7xl mx-auto flex items-center justify-between px-5 md:px-8 lg:px-12 py-4">
    <a href="/" class="text-white text-sm sm:text-base md:text-lg font-mono flex-shrink-0 flex items-center min-h-[48px]">
      <span class="text-blue-400">Profile</span><span class="text-purple-400">::</span><span class="text-yellow-300">aaron_rumery</span><span class="text-purple-400">()</span><span class="text-purple-400">;</span>
    </a>

    <!-- Desktop Navigation -->
    <ul id="navigation-menu" class="hidden lg:flex lg:items-center lg:gap-4 xl:gap-7 text-sm">
      <li>
        <a id="home-nav-link" href="/" class="text-white group flex flex-nowrap items-center hover:text-secondary">
          <span class="text-secondary opacity-0 translate-y-5 group-hover:opacity-100 group-hover:translate-y-0 transition-all">&#60;</span>Home
          <span class="text-secondary opacity-0 translate-y-1 group-hover:opacity-100 group-hover:translate-y-0 transition-all flex items-center pt-0.5"><span class="text-[11px]">/</span>&#62;</span>
        </a>
      </li>
      <li>
        <a href="/blog" class="text-white group flex flex-nowrap items-center hover:text-secondary">
          <span class="text-secondary opacity-0 translate-y-5 group-hover:opacity-100 group-hover:translate-y-0 transition-all">&#60;</span>Blog
          <span class="text-secondary opacity-0 translate-y-1 group-hover:opacity-100 group-hover:translate-y-0 transition-all flex items-center pt-0.5"><span class="text-[11px]">/</span>&#62;</span>
        </a>
      </li>
      <li class="w-fit h-fit overflow-visible">
        <div class="w-fit h-fit bg-secondary rounded">
          <a
            href="/resume.pdf"
            target="_blank"
            class="text-secondary bg-primary px-3 py-1 md:px-4 md:py-1.5 lg:px-8 lg:py-2.5 text-sm md:text-xs font-semibold lg:font-bold flex gap-3 items-center transition-all hover:translate-x-0.5 hover:-translate-y-0.5 whitespace-nowrap cursor-pointer border rounded border-secondary"
          >
            Resume
          </a>
        </div>
      </li>
    </ul>

    <!-- Mobile Menu Button - Optimized touch target -->
    <button
      id="mobile-menu-button"
      class="block lg:hidden flex-shrink-0 min-h-[48px] min-w-[48px] p-3 rounded-lg hover:bg-primary_light transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 focus:ring-offset-primary"
      aria-label="Toggle mobile menu"
      aria-expanded="false"
    >
      <svg id="menu-icon" class="w-6 h-6 text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
      </svg>
      <svg id="close-icon" class="w-6 h-6 text-secondary hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24" aria-hidden="true">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
      </svg>
    </button>

  </div>
</nav>

<!-- Mobile Navigation Menu - Optimized for touch interaction -->
<ul id="mobile-navigation-menu" class="fixed top-[72px] left-0 right-0 flex flex-col items-center w-full lg:hidden bg-primary z-[9997] px-5 gap-6 transition-all duration-300 ease-in-out h-0 overflow-hidden opacity-0">
    <li class="w-full max-w-xs">
      <a
        id="mobile-home-nav-link"
        href="/"
        class="text-white group flex flex-nowrap items-center justify-center hover:text-secondary min-h-[48px] px-6 py-4 rounded-lg hover:bg-primary_light transition-all duration-200 text-lg font-medium focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 focus:ring-offset-primary"
        aria-label="Navigate to home page"
      >
        <span class="text-secondary opacity-0 translate-y-5 group-hover:opacity-100 group-hover:translate-y-0 transition-all">&#60;</span>Home
        <span class="text-secondary opacity-0 translate-y-1 group-hover:opacity-100 group-hover:translate-y-0 transition-all flex items-center pt-0.5"><span class="text-[11px]">/</span>&#62;</span>
      </a>
    </li>
    <li class="w-full max-w-xs">
      <a
        href="/blog"
        class="text-white group flex flex-nowrap items-center justify-center hover:text-secondary min-h-[48px] px-6 py-4 rounded-lg hover:bg-primary_light transition-all duration-200 text-lg font-medium focus:outline-none focus:ring-2 focus:ring-secondary focus:ring-offset-2 focus:ring-offset-primary"
        aria-label="Navigate to blog"
      >
        <span class="text-secondary opacity-0 translate-y-5 group-hover:opacity-100 group-hover:translate-y-0 transition-all">&#60;</span>Blog
        <span class="text-secondary opacity-0 translate-y-1 group-hover:opacity-100 group-hover:translate-y-0 transition-all flex items-center pt-0.5"><span class="text-[11px]">/</span>&#62;</span>
      </a>
    </li>
    <li class="w-full max-w-xs">
      <div class="w-full bg-secondary rounded-lg overflow-visible shadow-lg">
        <a
          href="/resume.pdf"
          target="_blank"
          aria-label="Download resume PDF"
          class="text-secondary bg-primary min-h-[48px] px-6 py-4 text-lg font-semibold flex gap-3 items-center justify-center transition-all duration-300 hover:translate-x-0.5 hover:-translate-y-0.5 whitespace-nowrap cursor-pointer border-2 rounded-lg border-secondary hover:border-tertiary focus:outline-none focus:ring-2 focus:ring-tertiary focus:ring-offset-2 focus:ring-offset-primary"
        >
          Resume
        </a>
      </div>
    </li>
  </ul>

<script>
  // Header mobile menu functionality
  let mobileMenuOpen = false;

  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileNavigationMenu = document.getElementById('mobile-navigation-menu');
  const menuIcon = document.getElementById('menu-icon');
  const closeIcon = document.getElementById('close-icon');
  const homeNavLink = document.getElementById('home-nav-link');
  const mobileHomeNavLink = document.getElementById('mobile-home-nav-link');

  // Determine if we're on the home page for context-aware home link behavior
  const isHomePage = window.location.pathname === '/';

  // Context-aware home link behavior
  function handleHomeLinkClick(e: Event) {
    if (isHomePage) {
      e.preventDefault();
      // Scroll to top smoothly
      window.scrollTo({ top: 0, behavior: 'smooth' });
      if (mobileMenuOpen) {
        toggleMobileMenu();
      }
    }
    // On other pages, let the default link behavior work (navigate to /)
  }

  if (homeNavLink) {
    homeNavLink.addEventListener('click', handleHomeLinkClick);
  }

  if (mobileHomeNavLink) {
    mobileHomeNavLink.addEventListener('click', handleHomeLinkClick);
  }

  // Mobile menu toggle
  function toggleMobileMenu() {
    mobileMenuOpen = !mobileMenuOpen;

    if (mobileMenuOpen) {
      mobileNavigationMenu?.classList.remove('h-0', 'opacity-0');
      mobileNavigationMenu?.classList.add('h-80', 'py-8', 'opacity-100');
      menuIcon?.classList.add('hidden');
      closeIcon?.classList.remove('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'true');
    } else {
      mobileNavigationMenu?.classList.add('h-0', 'opacity-0');
      mobileNavigationMenu?.classList.remove('h-80', 'py-8', 'opacity-100');
      menuIcon?.classList.remove('hidden');
      closeIcon?.classList.add('hidden');
      mobileMenuButton?.setAttribute('aria-expanded', 'false');
    }
  }

  // Enhanced mobile menu toggle with touch support
  const handleMobileMenuToggle = (e: Event) => {
    e.preventDefault(); // Prevent any default behavior
    toggleMobileMenu();
  };

  // Add both click and touch event listeners for mobile menu button
  mobileMenuButton?.addEventListener('click', handleMobileMenuToggle);
  mobileMenuButton?.addEventListener('touchend', handleMobileMenuToggle);

  // Prevent touch scrolling issues
  mobileMenuButton?.addEventListener('touchstart', (e) => {
    e.stopPropagation();
  });

  // Mobile menu button keyboard support
  mobileMenuButton?.addEventListener('keydown', (e) => {
    const keyEvent = e as KeyboardEvent;
    if (keyEvent.key === 'Enter' || keyEvent.key === ' ') {
      keyEvent.preventDefault();
      toggleMobileMenu();
    } else if (keyEvent.key === 'Escape' && mobileMenuOpen) {
      keyEvent.preventDefault();
      toggleMobileMenu();
      mobileMenuButton?.focus();
    }
  });

  // Close mobile menu when clicking on navigation links
  const navLinks = mobileNavigationMenu?.querySelectorAll('a');
  navLinks?.forEach(link => {
    link.addEventListener('click', () => {
      if (mobileMenuOpen) {
        toggleMobileMenu();
      }
    });
  });
</script>
